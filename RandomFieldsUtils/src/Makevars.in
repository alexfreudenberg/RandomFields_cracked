
NVCC=@CUDA_HOME@/bin/nvcc
R_PATH=@R_LIB@
CUTLASS_PATH=@CUTLASS_PATH@

cc_sources = $(wildcard *.cc)
cu_sources = $(wildcard *.cu)
c_sources = $(wildcard *.c)
f_sources = $(wildcard *.f)
sources = $(cc_sources) $(cu_sources) $(c_sources) $(f_sources)

cc_sharedlibs = $(patsubst %.cc, %.o, $(cc_sources))
cu_sharedlibs = $(patsubst %.cu, %.o, $(cu_sources))
c_sharedlibs = $(patsubst %.c, %.o, $(c_sources))
f_sharedlibs = $(patsubst %.f, %.o, $(f_sources))
sharedlibs = $(cc_sharedlibs) $(c_sharedlibs) $(f_sharedlibs)

ifeq (@CUDA_INSTALLED@,true)
CUDA_LINKS = -L@CUDA_HOME@/lib64 -lcudart -lcublas -lcusolver -lcusolverMg
sharedlibs = $(cc_sharedlibs) $(c_sharedlibs) $(cu_sharedlibs) $(f_sources)

endif

PKG_LIBS =  $(LAPACK_LIBS) $(BLAS_LIBS)  $(SHLIB_OPENMP_CXXFLAGS) @RANDOMFIELDSUTILS_LIBFLAGS@ $(FLIBS) $(CUDA_LINKS)
PKG_CXXFLAGS = $(SHLIB_OPENMP_CXXFLAGS) @RANDOMFIELDSUTILS_CXXFLAGS@ 


all: $(SHLIB) clean


OBJECTS = $(sharedlibs)

%.o: %.cu
	$(NVCC) -std=c++14 -Xcompiler -fopenmp --gpu-architecture sm_75 --expt-extended-lambda\
	 $(CLINK_CPPFLAGS) -I $(R_INCLUDE_DIR) -I@CUDA_HOME@/include -I$(CUTLASS_PATH)/include -I$(CUTLASS_PATH)/tools/util/include -Xcompiler -fpic\
	    -DCUTLASS_NVCC_ARCHS=75 -DTHRUST_DEBUG -DUSEGPU \
	   -g -x cu -c $< -o $@ 

clean:
	rm -r -f s*.o Makevars

.PHONY: all clean
